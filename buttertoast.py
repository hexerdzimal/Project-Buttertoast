# I had to do something... so here we go - MF (Thought it would be great to sign comments with initials so we could blame each other)

import importlib
import os
import sys
from interface import ModuleInterface
import tkinter as tk
from tkinter import messagebox

def main ():

    if len(sys.argv) > 1 and sys.argv[1] == "-gui":
        start_gui()
        return
    else:
        start_txt()

#comment test
def start_txt():
    
     #ASCII Art was generated by: https://www.asciiart.eu/text-to-ascii-art
    print (r"""

             Version: Burnt (0.1)                             by Fabian Kozlowski, Stefan Leippe, Matthias Ferstl
             +===================================================================================================+
            |   ██████╗ ██╗   ██╗████████╗████████╗███████╗██████╗ ████████╗ ██████╗  █████╗ ███████╗████████╗  |
            |   ██╔══██╗██║   ██║╚══██╔══╝╚══██╔══╝██╔════╝██╔══██╗╚══██╔══╝██╔═══██╗██╔══██╗██╔════╝╚══██╔══╝  |
            |   ██████╔╝██║   ██║   ██║      ██║   █████╗  ██████╔╝   ██║   ██║   ██║███████║███████╗   ██║     |
            |   ██╔══██╗██║   ██║   ██║      ██║   ██╔══╝  ██╔══██╗   ██║   ██║   ██║██╔══██║╚════██║   ██║     |
            |   ██████╔╝╚██████╔╝   ██║      ██║   ███████╗██║  ██║   ██║   ╚██████╔╝██║  ██║███████║   ██║     |
            |   ╚═════╝  ╚═════╝    ╚═╝      ╚═╝   ╚══════╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝   ╚═╝     |
            +===================================================================================================+

                Hiding things in files since 2024, just like butter that "integrates" in a warm toast.

            """)


    print("Open Hub, this is the police! Please state your name:")

    name = input("Your name: ")

    print("Thanks for being here with us, " + name + "!")
    print("What is your favourite toast?")

    magicKey = input("We know you want it too: ")

    if magicKey == "Buttertoast":
        print("Great! So now, lets do some work!")
    else:  
        print("Disappointing!")

    while True:
        flow = input('Enter "1" to load plugins and execute their code, enter "2" to quit: ')
        if flow == "1":
            print("Plugins loaded. Executing code.")
            plugins = load_plugins()
            for plugin in plugins:
                plugin.run()  
            break
        elif flow == "2":
            print("Quitting program.")
            break
        else:
            print("Invalid input. Please enter '1' or '2'.")

    input('Press ENTER to exit')

def load_plugins(directory="plugins"):
    loaded_plugins = []
    
    # Prüfen, ob der plugins-Ordner existiert
    if not os.path.exists(directory):
        print(f"Plugin-Ordner '{directory}' nicht gefunden.")
        return loaded_plugins
    
    # Plugin-Ordner zum Python-Pfad hinzufügen
    sys.path.insert(0, directory)
    
    # Durchsuchen des Plugin-Ordners nach Python-Dateien
    for filename in os.listdir(directory):
        if filename.endswith(".py") and filename != "__init__.py":
            plugin_name = filename[:-3]
            try:
                # Importiere das Plugin als Modul
                plugin_module = importlib.import_module(plugin_name)
                
                # Suche nach Klassen, die das Plugin-Interface implementieren
                for attribute_name in dir(plugin_module):
                    attribute = getattr(plugin_module, attribute_name)
                    if isinstance(attribute, type) and issubclass(attribute, ModuleInterface) and attribute is not ModuleInterface:
                        loaded_plugins.append(attribute())
            except Exception as e:
                print(f"Fehler beim Laden des Plugins {plugin_name}: {e}")
    
    # Entferne den Plugin-Ordner
    sys.path.pop(0)
    
    return loaded_plugins

def start_gui():
    # Erstelle das Hauptfenster
    root = tk.Tk()
    root.title("Buttertoast 0.1")

    # Füge ein Label hinzu
    label = tk.Label(root, text="Willkommen in der GUI!")
    label.pack(pady=20)

    button = tk.Button(root, text="Schließen", command=root.quit)
    button.pack(pady=20)

    # Starte die GUI
    root.mainloop()

# Just in case someone wants to use this app as an import, we avoid executing the main method. Will only execute if started directly. -MF
if __name__ == "__main__":
    main()